{"ast":null,"code":"import _defineProperty from \"/home/marto19/Documents/Projects/WebSites/React/e-commerce-site-tutorial/online-store/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/marto19/Documents/Projects/WebSites/React/e-commerce-site-tutorial/online-store/src/Context.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { storeProducts, detailProduct } from './data';\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct,\n      cart: [],\n      modelOpen: false,\n      modelProduct: detailProduct,\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      storeProducts.forEach(item => {\n        const singleItem = _objectSpread({}, item);\n\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: tempProducts\n        };\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        this.addTotlas();\n      });\n    };\n\n    this.openModel = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modelProduct: product,\n          modelOpen: true\n        };\n      });\n    };\n\n    this.closeModel = () => {\n      this.setState(() => {\n        return {\n          modelOpen: false\n        };\n      });\n    };\n\n    this.increment = id => {\n      console.log('this is increment method');\n    };\n\n    this.decrement = id => {\n      console.log('this is decrement method');\n    };\n\n    this.removeItem = id => {\n      console.log('this is remove item method');\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      });\n    };\n\n    this.addTotlas = () => {\n      let subTotal = 0;\n      this.state.cart.map(item => subTotal += item.total);\n      const tempTax = subTotal * 0.2;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      this.setState(() => {\n        return {\n          cartSubTotal: subTotal,\n          cartTax: tax,\n          cartTotal: total\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return React.createElement(ProductContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModel: this.openModel,\n        closeModel: this.closeModel,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/home/marto19/Documents/Projects/WebSites/React/e-commerce-site-tutorial/online-store/src/Context.js"],"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","cart","modelOpen","modelProduct","cartSubTotal","cartTax","cartTotal","setProducts","tempProducts","forEach","item","singleItem","setState","getItem","id","product","find","handleDetail","addToCart","index","indexOf","inCart","count","price","total","addTotlas","openModel","closeModel","increment","console","log","decrement","removeItem","clearCart","subTotal","map","tempTax","tax","parseFloat","toFixed","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {storeProducts, detailProduct} from './data';\n\nconst ProductContext = React.createContext();\n\n\nclass ProductProvider extends Component {\n    state = {\n        products: [],\n        detailProduct: detailProduct,\n        cart: [],\n        modelOpen: false,\n        modelProduct: detailProduct,\n        cartSubTotal: 0,\n        cartTax: 0,\n        cartTotal: 0\n    };\n    componentDidMount(){\n        this.setProducts();\n    };\n    setProducts = () =>{\n        let tempProducts = [];\n        storeProducts.forEach(item => {\n            const singleItem = {...item};\n            tempProducts = [...tempProducts, singleItem];\n        });\n        this.setState(()=>{\n            return {products: tempProducts}\n        });\n    };\n    getItem = id =>{\n        const product = this.state.products.find(item => item.id === id);\n        return product;\n    }\n\n    handleDetail = id =>{\n        const product = this.getItem(id);\n        this.setState(() =>{\n            return {detailProduct: product}\n        })\n    };\n    addToCart = id =>{\n        let tempProducts = [...this.state.products];\n        const index = tempProducts.indexOf(this.getItem(id));\n        const product = tempProducts[index];\n        product.inCart = true;\n        product.count = 1;\n        const price = product.price;\n        product.total = price;\n\n        this.setState(\n            () =>{\n                return {products: tempProducts, cart: [...this.state.cart, product]};\n            },\n            () => {\n                this.addTotlas();\n            }\n        );\n    };\n    openModel = id => {\n        const product = this.getItem(id);\n        this.setState(() =>{\n            return {modelProduct:product, modelOpen:true};\n        })\n    }\n    closeModel = () =>{\n        this.setState(() =>{\n            return {modelOpen:false};\n        })\n    }\n    increment = (id) => {\n        console.log('this is increment method');\n    }\n    decrement = (id) => {\n        console.log('this is decrement method');\n    }\n    removeItem = (id) => {\n        console.log('this is remove item method');\n    }\n    clearCart = () =>{\n        this.setState(()=>{\n            return {cart:[]}\n        })\n    }\n    addTotlas = () => {\n        let subTotal = 0;\n        this.state.cart.map(item =>(subTotal += item.total))\n        const tempTax = subTotal * 0.2;\n        const tax = parseFloat(tempTax.toFixed(2));\n        const total = subTotal + tax;\n        this.setState(()=>{\n            return {\n                cartSubTotal: subTotal,\n                cartTax: tax,\n                cartTotal: total\n\n            }\n        })\n\n    }\n    render() {\n        return (\n            <ProductContext.Provider \n                value={{\n                    ...this.state,\n                    handleDetail:this.handleDetail,\n                    addToCart:this.addToCart,\n                    openModel: this.openModel,\n                    closeModel: this.closeModel,\n                    increment: this.increment,\n                    decrement: this.decrement,\n                    removeItem: this.removeItem,\n                    clearCart: this.clearCart\n                }}\n            >\n                {this.props.children}\n            </ProductContext.Provider>\n        )\n    }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n\nexport {ProductProvider, ProductConsumer};"]},"metadata":{},"sourceType":"module"}